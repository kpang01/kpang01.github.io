{"ast":null,"code":"import React,{useEffect,useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function AIVisual(){const[activeNode,setActiveNode]=useState(null);const[activePath,setActivePath]=useState(null);const[networkPulse,setNetworkPulse]=useState(false);// Layer configuration\nconst layers=[{nodes:4,label:'Input'},{nodes:6,label:'Hidden 1'},{nodes:6,label:'Hidden 2'},{nodes:4,label:'Output'}];// Calculate positions\nconst width=600;const height=600;const layerGap=width/(layers.length+1);const maxNodes=Math.max(...layers.map(l=>l.nodes));const nodeGap=height/(maxNodes+1);// Generate node positions with activation values\nconst getNodePositions=()=>{let positions=[];layers.forEach((layer,layerIndex)=>{const x=layerGap*(layerIndex+1);const layerStart=(height-(layer.nodes-1)*nodeGap)/2;for(let i=0;i<layer.nodes;i++){positions.push({x,y:layerStart+i*nodeGap,layerIndex,nodeIndex:i,activation:Math.random()});}});return positions;};const nodePositions=getNodePositions();// Generate connections with weights\nconst getConnections=()=>{let connections=[];for(let i=0;i<layers.length-1;i++){const currentLayer=nodePositions.filter(node=>node.layerIndex===i);const nextLayer=nodePositions.filter(node=>node.layerIndex===i+1);currentLayer.forEach(start=>{nextLayer.forEach(end=>{connections.push({start,end,weight:Math.random()*2-1});});});}return connections;};// Network pulse effect\nuseEffect(()=>{const interval=setInterval(()=>{setNetworkPulse(true);setTimeout(()=>setNetworkPulse(false),1000);},5000);return()=>clearInterval(interval);},[]);const handleNodeHover=index=>{setActiveNode(index);setActivePath(index);};return/*#__PURE__*/_jsxs(\"div\",{style:{position:'relative',width:width,height:height},children:[/*#__PURE__*/_jsxs(\"svg\",{width:\"100%\",height:\"100%\",style:{position:'absolute'},children:[getConnections().map((connection,i)=>{const isActive=activePath===connection.start.nodeIndex||activePath===connection.end.nodeIndex;return/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"line\",{x1:connection.start.x,y1:connection.start.y,x2:connection.end.x,y2:connection.end.y,stroke:\"#38BDF8\",strokeWidth:isActive?\"2\":\"1\",strokeOpacity:isActive?\"0.4\":\"0.2\",style:{transition:'all 0.3s ease'}}),/*#__PURE__*/_jsx(\"circle\",{r:\"2\",fill:\"#38BDF8\",children:/*#__PURE__*/_jsx(\"animateMotion\",{dur:\"\".concat(3+Math.random()*2,\"s\"),repeatCount:\"indefinite\",path:\"M\".concat(connection.start.x,\",\").concat(connection.start.y,\" L\").concat(connection.end.x,\",\").concat(connection.end.y)})})]},\"connection-\".concat(i));}),nodePositions.map((node,i)=>{const isActive=activeNode===i;return/*#__PURE__*/_jsxs(\"g\",{onMouseEnter:()=>handleNodeHover(i),onMouseLeave:()=>{setActiveNode(null);setActivePath(null);},style:{cursor:'pointer'},children:[/*#__PURE__*/_jsx(\"circle\",{cx:node.x,cy:node.y,r:\"20\",fill:\"none\",stroke:isActive?\"#60A5FA\":\"#38BDF8\",strokeWidth:\"1\",strokeOpacity:\"0.3\",strokeDasharray:isActive?\"4,2\":\"0\",style:{transition:'all 0.3s ease'},children:/*#__PURE__*/_jsx(\"animate\",{attributeName:\"r\",values:networkPulse?\"20;25;20\":\"20\",dur:\"1s\",repeatCount:\"1\"})}),/*#__PURE__*/_jsx(\"circle\",{cx:node.x,cy:node.y,r:\"15\",fill:\"rgba(56, 189, 248, 0.1)\",filter:\"url(#glow)\",style:{transition:'all 0.3s ease'},children:/*#__PURE__*/_jsx(\"animate\",{attributeName:\"r\",values:isActive?\"15;18;15\":\"12;15;12\",dur:\"2s\",repeatCount:\"indefinite\"})}),/*#__PURE__*/_jsx(\"circle\",{cx:node.x,cy:node.y,r:isActive?\"8\":\"6\",fill:isActive?\"#60A5FA\":\"#38BDF8\",style:{transition:'all 0.3s ease'}}),isActive&&/*#__PURE__*/_jsx(\"text\",{x:node.x,y:node.y-25,textAnchor:\"middle\",fill:\"#94A3B8\",fontSize:\"12\",children:node.activation.toFixed(2)})]},\"node-\".concat(i));}),/*#__PURE__*/_jsx(\"defs\",{children:/*#__PURE__*/_jsxs(\"filter\",{id:\"glow\",children:[/*#__PURE__*/_jsx(\"feGaussianBlur\",{stdDeviation:\"3\",result:\"coloredBlur\"}),/*#__PURE__*/_jsxs(\"feMerge\",{children:[/*#__PURE__*/_jsx(\"feMergeNode\",{in:\"coloredBlur\"}),/*#__PURE__*/_jsx(\"feMergeNode\",{in:\"SourceGraphic\"})]})]})})]}),layers.map((layer,i)=>/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',top:height-40,left:layerGap*(i+1)-30,color:'#94A3B8',fontSize:'14px',textAlign:'center'},children:layer.label},\"label-\".concat(i)))]});}export default AIVisual;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","AIVisual","activeNode","setActiveNode","activePath","setActivePath","networkPulse","setNetworkPulse","layers","nodes","label","width","height","layerGap","length","maxNodes","Math","max","map","l","nodeGap","getNodePositions","positions","forEach","layer","layerIndex","x","layerStart","i","push","y","nodeIndex","activation","random","nodePositions","getConnections","connections","currentLayer","filter","node","nextLayer","start","end","weight","interval","setInterval","setTimeout","clearInterval","handleNodeHover","index","style","position","children","connection","isActive","x1","y1","x2","y2","stroke","strokeWidth","strokeOpacity","transition","r","fill","dur","concat","repeatCount","path","onMouseEnter","onMouseLeave","cursor","cx","cy","strokeDasharray","attributeName","values","textAnchor","fontSize","toFixed","id","stdDeviation","result","in","top","left","color","textAlign"],"sources":["C:/Users/Pascal/OneDrive/Desktop/PersonalSkill/Website/kpang01.github.io/src/components/AIVisual.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction AIVisual() {\n  const [activeNode, setActiveNode] = useState(null);\n  const [activePath, setActivePath] = useState(null);\n  const [networkPulse, setNetworkPulse] = useState(false);\n  \n  // Layer configuration\n  const layers = [\n    { nodes: 4, label: 'Input' },\n    { nodes: 6, label: 'Hidden 1' },\n    { nodes: 6, label: 'Hidden 2' },\n    { nodes: 4, label: 'Output' }\n  ];\n\n  // Calculate positions\n  const width = 600;\n  const height = 600;\n  const layerGap = width / (layers.length + 1);\n  const maxNodes = Math.max(...layers.map(l => l.nodes));\n  const nodeGap = height / (maxNodes + 1);\n\n  // Generate node positions with activation values\n  const getNodePositions = () => {\n    let positions = [];\n    layers.forEach((layer, layerIndex) => {\n      const x = layerGap * (layerIndex + 1);\n      const layerStart = (height - (layer.nodes - 1) * nodeGap) / 2;\n      for (let i = 0; i < layer.nodes; i++) {\n        positions.push({\n          x,\n          y: layerStart + i * nodeGap,\n          layerIndex,\n          nodeIndex: i,\n          activation: Math.random()\n        });\n      }\n    });\n    return positions;\n  };\n\n  const nodePositions = getNodePositions();\n\n  // Generate connections with weights\n  const getConnections = () => {\n    let connections = [];\n    for (let i = 0; i < layers.length - 1; i++) {\n      const currentLayer = nodePositions.filter(node => node.layerIndex === i);\n      const nextLayer = nodePositions.filter(node => node.layerIndex === i + 1);\n      \n      currentLayer.forEach(start => {\n        nextLayer.forEach(end => {\n          connections.push({\n            start,\n            end,\n            weight: Math.random() * 2 - 1\n          });\n        });\n      });\n    }\n    return connections;\n  };\n\n  // Network pulse effect\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setNetworkPulse(true);\n      setTimeout(() => setNetworkPulse(false), 1000);\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const handleNodeHover = (index) => {\n    setActiveNode(index);\n    setActivePath(index);\n  };\n\n  return (\n    <div style={{\n      position: 'relative',\n      width: width,\n      height: height,\n    }}>\n      <svg width=\"100%\" height=\"100%\" style={{ position: 'absolute' }}>\n        {/* Connections */}\n        {getConnections().map((connection, i) => {\n          const isActive = activePath === connection.start.nodeIndex || \n                          activePath === connection.end.nodeIndex;\n          return (\n            <g key={`connection-${i}`}>\n              <line\n                x1={connection.start.x}\n                y1={connection.start.y}\n                x2={connection.end.x}\n                y2={connection.end.y}\n                stroke=\"#38BDF8\"\n                strokeWidth={isActive ? \"2\" : \"1\"}\n                strokeOpacity={isActive ? \"0.4\" : \"0.2\"}\n                style={{ transition: 'all 0.3s ease' }}\n              />\n              {/* Data flow particles */}\n              <circle r=\"2\" fill=\"#38BDF8\">\n                <animateMotion\n                  dur={`${3 + Math.random() * 2}s`}\n                  repeatCount=\"indefinite\"\n                  path={`M${connection.start.x},${connection.start.y} L${connection.end.x},${connection.end.y}`}\n                />\n              </circle>\n            </g>\n          );\n        })}\n\n        {/* Nodes */}\n        {nodePositions.map((node, i) => {\n          const isActive = activeNode === i;\n          return (\n            <g key={`node-${i}`}\n               onMouseEnter={() => handleNodeHover(i)}\n               onMouseLeave={() => {\n                 setActiveNode(null);\n                 setActivePath(null);\n               }}\n               style={{ cursor: 'pointer' }}\n            >\n              {/* Activation ring */}\n              <circle\n                cx={node.x}\n                cy={node.y}\n                r=\"20\"\n                fill=\"none\"\n                stroke={isActive ? \"#60A5FA\" : \"#38BDF8\"}\n                strokeWidth=\"1\"\n                strokeOpacity=\"0.3\"\n                strokeDasharray={isActive ? \"4,2\" : \"0\"}\n                style={{ transition: 'all 0.3s ease' }}\n              >\n                <animate\n                  attributeName=\"r\"\n                  values={networkPulse ? \"20;25;20\" : \"20\"}\n                  dur=\"1s\"\n                  repeatCount=\"1\"\n                />\n              </circle>\n\n              {/* Outer glow */}\n              <circle\n                cx={node.x}\n                cy={node.y}\n                r=\"15\"\n                fill=\"rgba(56, 189, 248, 0.1)\"\n                filter=\"url(#glow)\"\n                style={{ transition: 'all 0.3s ease' }}\n              >\n                <animate\n                  attributeName=\"r\"\n                  values={isActive ? \"15;18;15\" : \"12;15;12\"}\n                  dur=\"2s\"\n                  repeatCount=\"indefinite\"\n                />\n              </circle>\n              \n              {/* Node circle */}\n              <circle\n                cx={node.x}\n                cy={node.y}\n                r={isActive ? \"8\" : \"6\"}\n                fill={isActive ? \"#60A5FA\" : \"#38BDF8\"}\n                style={{ transition: 'all 0.3s ease' }}\n              />\n\n              {/* Activation value */}\n              {isActive && (\n                <text\n                  x={node.x}\n                  y={node.y - 25}\n                  textAnchor=\"middle\"\n                  fill=\"#94A3B8\"\n                  fontSize=\"12\"\n                >\n                  {node.activation.toFixed(2)}\n                </text>\n              )}\n            </g>\n          );\n        })}\n\n        {/* Effects definitions */}\n        <defs>\n          <filter id=\"glow\">\n            <feGaussianBlur stdDeviation=\"3\" result=\"coloredBlur\"/>\n            <feMerge>\n              <feMergeNode in=\"coloredBlur\"/>\n              <feMergeNode in=\"SourceGraphic\"/>\n            </feMerge>\n          </filter>\n        </defs>\n      </svg>\n\n      {/* Layer Labels */}\n      {layers.map((layer, i) => (\n        <div\n          key={`label-${i}`}\n          style={{\n            position: 'absolute',\n            top: height - 40,\n            left: layerGap * (i + 1) - 30,\n            color: '#94A3B8',\n            fontSize: '14px',\n            textAlign: 'center',\n          }}\n        >\n          {layer.label}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default AIVisual; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}