{"ast":null,"code":"import React,{useEffect,useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function AIVisual(){const[activeNode,setActiveNode]=useState(null);// const [activePath, setActivePath] = useState(null); // Removed unused state\nconst[networkPulse,setNetworkPulse]=useState(false);// Layer configuration\nconst layers=[{nodes:4,label:'Input'},{nodes:6,label:'Hidden 1'},{nodes:6,label:'Hidden 2'},{nodes:4,label:'Output'}];// Calculate positions\nconst width=600;// Intrinsic width of the SVG visual\nconst height=600;// Intrinsic height of the SVG visual\nconst layerGap=width/(layers.length+1);const maxNodes=Math.max(...layers.map(l=>l.nodes));const nodeGap=height/(maxNodes+1);// Generate node positions with activation values\nconst getNodePositions=()=>{let positions=[];layers.forEach((layer,layerIndex)=>{const x=layerGap*(layerIndex+1);const layerStart=(height-(layer.nodes-1)*nodeGap)/2;for(let i=0;i<layer.nodes;i++){positions.push({x,y:layerStart+i*nodeGap,layerIndex,nodeIndex:i,activation:Math.random()});}});return positions;};// Memoize node positions and connections if performance becomes an issue\nconst nodePositions=getNodePositions();// Generate connections with weights\nconst getConnections=()=>{let connections=[];for(let i=0;i<layers.length-1;i++){const currentLayer=nodePositions.filter(node=>node.layerIndex===i);const nextLayer=nodePositions.filter(node=>node.layerIndex===i+1);currentLayer.forEach(start=>{nextLayer.forEach(end=>{connections.push({start,end,weight:Math.random()*2-1// Example weight\n});});});}return connections;};const connections=getConnections();// Generate connections once\n// Network pulse effect\nuseEffect(()=>{const interval=setInterval(()=>{setNetworkPulse(true);const timer=setTimeout(()=>setNetworkPulse(false),1000);return()=>clearTimeout(timer);// Clear timeout on interval clear\n},5000);return()=>clearInterval(interval);// Clear interval on unmount\n},[]);const handleNodeHover=index=>{setActiveNode(index);// Highlight paths connected to the hovered node - logic removed as activePath state is removed\n// const connectedPaths = connections.filter(c => c.start === nodePositions[index] || c.end === nodePositions[index]);\n// setActivePath(index); // Removed unused state update\n};const handleNodeLeave=()=>{setActiveNode(null);// setActivePath(null); // Removed unused state update\n};return(/*#__PURE__*/// Container div controls the size and positioning within the parent layout\n_jsxs(\"div\",{style:{position:'relative',// Changed from absolute if it's placed directly\nwidth:'100%',// Take width of parent container (.cards-visual)\nheight:'100%',// Take height of parent container (.cards-visual)\nmaxWidth:`${width}px`,// Max width based on SVG intrinsic size\nmaxHeight:`${height}px`,// Max height based on SVG intrinsic size\nmargin:'auto'// Center if needed\n},children:[/*#__PURE__*/_jsxs(\"svg\",{width:\"100%\",height:\"100%\",viewBox:`0 0 ${width} ${height}`,preserveAspectRatio:\"xMidYMid meet\",style:{position:'absolute',top:0,left:0},children:[/*#__PURE__*/_jsx(\"defs\",{children:/*#__PURE__*/_jsxs(\"filter\",{id:\"glow\",children:[/*#__PURE__*/_jsx(\"feGaussianBlur\",{stdDeviation:\"3\",result:\"coloredBlur\"}),/*#__PURE__*/_jsxs(\"feMerge\",{children:[/*#__PURE__*/_jsx(\"feMergeNode\",{in:\"coloredBlur\"}),/*#__PURE__*/_jsx(\"feMergeNode\",{in:\"SourceGraphic\"})]})]})}),connections.map((connection,i)=>{// Determine if path is active based on the activeNode state only\nconst isPathActive=activeNode!==null&&(connection.start===nodePositions[activeNode]||connection.end===nodePositions[activeNode]);return/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"line\",{x1:connection.start.x,y1:connection.start.y,x2:connection.end.x,y2:connection.end.y,stroke:\"#38BDF8\"// Consider using CSS variable --cyan-highlight or --green\n,strokeWidth:isPathActive?\"1.5\":\"0.5\"// Adjusted thickness\n,strokeOpacity:isPathActive?\"0.6\":\"0.15\"// Adjusted opacity\n,style:{transition:'all 0.3s ease'}}),/*#__PURE__*/_jsx(\"circle\",{r:\"1.5\",fill:\"#38BDF8\",children:/*#__PURE__*/_jsx(\"animateMotion\",{dur:`${3+Math.random()*2}s`,repeatCount:\"indefinite\",path:`M${connection.start.x},${connection.start.y} L${connection.end.x},${connection.end.y}`,begin:`${Math.random()*1}s`// Stagger particle start times\n})})]},`connection-${i}`);}),nodePositions.map((node,i)=>{const isNodeActive=activeNode===i;return/*#__PURE__*/_jsxs(\"g\",{onMouseEnter:()=>handleNodeHover(i),onMouseLeave:handleNodeLeave,style:{cursor:'pointer'},children:[/*#__PURE__*/_jsx(\"circle\",{cx:node.x,cy:node.y,r:\"20\",fill:\"none\",stroke:isNodeActive?\"#60A5FA\":\"#38BDF8\"// Consider CSS variables\n,strokeWidth:\"1\",strokeOpacity:\"0.3\",strokeDasharray:isNodeActive?\"4,2\":\"none\"// Use none instead of 0\n,style:{transition:'all 0.3s ease'},children:networkPulse&&/*#__PURE__*/_jsx(\"animate\",{attributeName:\"r\",values:\"20;25;20\",dur:\"1s\",repeatCount:\"1\"// Removed indefinite repeat\n,begin:\"0s\"// Start immediately when pulse is true\n})}),/*#__PURE__*/_jsx(\"circle\",{cx:node.x,cy:node.y,r:isNodeActive?\"18\":\"15\"// Make active glow slightly larger\n,fill:\"rgba(56, 189, 248, 0.1)\",filter:\"url(#glow)\",style:{transition:'all 0.3s ease'},children:/*#__PURE__*/_jsx(\"animate\",{attributeName:\"r\",values:isNodeActive?\"18;22;18\":\"15;18;15\"// Adjusted values\n,dur:\"2s\",repeatCount:\"indefinite\"})}),/*#__PURE__*/_jsx(\"circle\",{cx:node.x,cy:node.y,r:isNodeActive?\"8\":\"6\",fill:isNodeActive?\"#60A5FA\":\"#38BDF8\"// Consider CSS variables\n,style:{transition:'all 0.3s ease'}}),isNodeActive&&/*#__PURE__*/_jsx(\"text\",{x:node.x,y:node.y-25,textAnchor:\"middle\",fill:\"#94A3B8\"// Consider var(--slate)\n,fontSize:\"12\"// Consider var(--fz-xxs)\n,style:{pointerEvents:'none'}// Prevent text from blocking hover\n,children:node.activation.toFixed(2)})]},`node-${i}`);})]}),layers.map((layer,i)=>/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',bottom:'20px',// Position labels at the bottom\nleft:`${layerGap*(i+1)/width*100}%`,// Position based on percentage\ntransform:'translateX(-50%)',// Center the label\ncolor:'#94A3B8',// Consider var(--slate)\nfontSize:'14px',// Consider var(--fz-sm)\ntextAlign:'center'},children:layer.label},`label-${i}`))]}));}export default AIVisual;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","AIVisual","activeNode","setActiveNode","networkPulse","setNetworkPulse","layers","nodes","label","width","height","layerGap","length","maxNodes","Math","max","map","l","nodeGap","getNodePositions","positions","forEach","layer","layerIndex","x","layerStart","i","push","y","nodeIndex","activation","random","nodePositions","getConnections","connections","currentLayer","filter","node","nextLayer","start","end","weight","interval","setInterval","timer","setTimeout","clearTimeout","clearInterval","handleNodeHover","index","handleNodeLeave","style","position","maxWidth","maxHeight","margin","children","viewBox","preserveAspectRatio","top","left","id","stdDeviation","result","in","connection","isPathActive","x1","y1","x2","y2","stroke","strokeWidth","strokeOpacity","transition","r","fill","dur","repeatCount","path","begin","isNodeActive","onMouseEnter","onMouseLeave","cursor","cx","cy","strokeDasharray","attributeName","values","textAnchor","fontSize","pointerEvents","toFixed","bottom","transform","color","textAlign"],"sources":["C:/Users/pkhon/Desktop/Project/PersonalSkill/Website/kpang01.github.io/src/components/AIVisual.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction AIVisual() {\r\n  const [activeNode, setActiveNode] = useState(null);\r\n  // const [activePath, setActivePath] = useState(null); // Removed unused state\r\n  const [networkPulse, setNetworkPulse] = useState(false);\r\n\r\n  // Layer configuration\r\n  const layers = [\r\n    { nodes: 4, label: 'Input' },\r\n    { nodes: 6, label: 'Hidden 1' },\r\n    { nodes: 6, label: 'Hidden 2' },\r\n    { nodes: 4, label: 'Output' }\r\n  ];\r\n\r\n  // Calculate positions\r\n  const width = 600; // Intrinsic width of the SVG visual\r\n  const height = 600; // Intrinsic height of the SVG visual\r\n  const layerGap = width / (layers.length + 1);\r\n  const maxNodes = Math.max(...layers.map(l => l.nodes));\r\n  const nodeGap = height / (maxNodes + 1);\r\n\r\n  // Generate node positions with activation values\r\n  const getNodePositions = () => {\r\n    let positions = [];\r\n    layers.forEach((layer, layerIndex) => {\r\n      const x = layerGap * (layerIndex + 1);\r\n      const layerStart = (height - (layer.nodes - 1) * nodeGap) / 2;\r\n      for (let i = 0; i < layer.nodes; i++) {\r\n        positions.push({\r\n          x,\r\n          y: layerStart + i * nodeGap,\r\n          layerIndex,\r\n          nodeIndex: i,\r\n          activation: Math.random()\r\n        });\r\n      }\r\n    });\r\n    return positions;\r\n  };\r\n\r\n  // Memoize node positions and connections if performance becomes an issue\r\n  const nodePositions = getNodePositions();\r\n\r\n  // Generate connections with weights\r\n  const getConnections = () => {\r\n    let connections = [];\r\n    for (let i = 0; i < layers.length - 1; i++) {\r\n      const currentLayer = nodePositions.filter(node => node.layerIndex === i);\r\n      const nextLayer = nodePositions.filter(node => node.layerIndex === i + 1);\r\n\r\n      currentLayer.forEach(start => {\r\n        nextLayer.forEach(end => {\r\n          connections.push({\r\n            start,\r\n            end,\r\n            weight: Math.random() * 2 - 1 // Example weight\r\n          });\r\n        });\r\n      });\r\n    }\r\n    return connections;\r\n  };\r\n\r\n  const connections = getConnections(); // Generate connections once\r\n\r\n  // Network pulse effect\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setNetworkPulse(true);\r\n      const timer = setTimeout(() => setNetworkPulse(false), 1000);\r\n      return () => clearTimeout(timer); // Clear timeout on interval clear\r\n    }, 5000);\r\n    return () => clearInterval(interval); // Clear interval on unmount\r\n  }, []);\r\n\r\n  const handleNodeHover = (index) => {\r\n    setActiveNode(index);\r\n    // Highlight paths connected to the hovered node - logic removed as activePath state is removed\r\n    // const connectedPaths = connections.filter(c => c.start === nodePositions[index] || c.end === nodePositions[index]);\r\n    // setActivePath(index); // Removed unused state update\r\n  };\r\n\r\n  const handleNodeLeave = () => {\r\n    setActiveNode(null);\r\n    // setActivePath(null); // Removed unused state update\r\n  };\r\n\r\n\r\n  return (\r\n    // Container div controls the size and positioning within the parent layout\r\n    <div style={{\r\n      position: 'relative', // Changed from absolute if it's placed directly\r\n      width: '100%', // Take width of parent container (.cards-visual)\r\n      height: '100%', // Take height of parent container (.cards-visual)\r\n      maxWidth: `${width}px`, // Max width based on SVG intrinsic size\r\n      maxHeight: `${height}px`, // Max height based on SVG intrinsic size\r\n      margin: 'auto' // Center if needed\r\n    }}>\r\n      <svg width=\"100%\" height=\"100%\" viewBox={`0 0 ${width} ${height}`} preserveAspectRatio=\"xMidYMid meet\" style={{ position: 'absolute', top: 0, left: 0 }}>\r\n        {/* Effects definitions */}\r\n        <defs>\r\n          <filter id=\"glow\">\r\n            <feGaussianBlur stdDeviation=\"3\" result=\"coloredBlur\"/>\r\n            <feMerge>\r\n              <feMergeNode in=\"coloredBlur\"/>\r\n              <feMergeNode in=\"SourceGraphic\"/>\r\n            </feMerge>\r\n          </filter>\r\n        </defs>\r\n\r\n        {/* Connections */}\r\n        {connections.map((connection, i) => {\r\n          // Determine if path is active based on the activeNode state only\r\n          const isPathActive = activeNode !== null && (connection.start === nodePositions[activeNode] || connection.end === nodePositions[activeNode]);\r\n          return (\r\n            <g key={`connection-${i}`}>\r\n              <line\r\n                x1={connection.start.x}\r\n                y1={connection.start.y}\r\n                x2={connection.end.x}\r\n                y2={connection.end.y}\r\n                stroke=\"#38BDF8\" // Consider using CSS variable --cyan-highlight or --green\r\n                strokeWidth={isPathActive ? \"1.5\" : \"0.5\"} // Adjusted thickness\r\n                strokeOpacity={isPathActive ? \"0.6\" : \"0.15\"} // Adjusted opacity\r\n                style={{ transition: 'all 0.3s ease' }}\r\n              />\r\n              {/* Data flow particles */}\r\n              <circle r=\"1.5\" fill=\"#38BDF8\">\r\n                <animateMotion\r\n                  dur={`${3 + Math.random() * 2}s`}\r\n                  repeatCount=\"indefinite\"\r\n                  path={`M${connection.start.x},${connection.start.y} L${connection.end.x},${connection.end.y}`}\r\n                  begin={`${Math.random() * 1}s`} // Stagger particle start times\r\n                />\r\n              </circle>\r\n            </g>\r\n          );\r\n        })}\r\n\r\n        {/* Nodes */}\r\n        {nodePositions.map((node, i) => {\r\n          const isNodeActive = activeNode === i;\r\n          return (\r\n            <g key={`node-${i}`}\r\n               onMouseEnter={() => handleNodeHover(i)}\r\n               onMouseLeave={handleNodeLeave}\r\n               style={{ cursor: 'pointer' }}\r\n            >\r\n              {/* Activation ring */}\r\n              <circle\r\n                cx={node.x}\r\n                cy={node.y}\r\n                r=\"20\"\r\n                fill=\"none\"\r\n                stroke={isNodeActive ? \"#60A5FA\" : \"#38BDF8\"} // Consider CSS variables\r\n                strokeWidth=\"1\"\r\n                strokeOpacity=\"0.3\"\r\n                strokeDasharray={isNodeActive ? \"4,2\" : \"none\"} // Use none instead of 0\r\n                style={{ transition: 'all 0.3s ease' }}\r\n              >\r\n                {networkPulse && <animate\r\n                  attributeName=\"r\"\r\n                  values=\"20;25;20\"\r\n                  dur=\"1s\"\r\n                  repeatCount=\"1\" // Removed indefinite repeat\r\n                  begin=\"0s\" // Start immediately when pulse is true\r\n                />}\r\n              </circle>\r\n\r\n              {/* Outer glow */}\r\n              <circle\r\n                cx={node.x}\r\n                cy={node.y}\r\n                r={isNodeActive ? \"18\" : \"15\"} // Make active glow slightly larger\r\n                fill=\"rgba(56, 189, 248, 0.1)\"\r\n                filter=\"url(#glow)\"\r\n                style={{ transition: 'all 0.3s ease' }}\r\n              >\r\n                 <animate\r\n                  attributeName=\"r\"\r\n                  values={isNodeActive ? \"18;22;18\" : \"15;18;15\"} // Adjusted values\r\n                  dur=\"2s\"\r\n                  repeatCount=\"indefinite\"\r\n                />\r\n              </circle>\r\n\r\n              {/* Node circle */}\r\n              <circle\r\n                cx={node.x}\r\n                cy={node.y}\r\n                r={isNodeActive ? \"8\" : \"6\"}\r\n                fill={isNodeActive ? \"#60A5FA\" : \"#38BDF8\"} // Consider CSS variables\r\n                style={{ transition: 'all 0.3s ease' }}\r\n              />\r\n\r\n              {/* Activation value */}\r\n              {isNodeActive && (\r\n                <text\r\n                  x={node.x}\r\n                  y={node.y - 25}\r\n                  textAnchor=\"middle\"\r\n                  fill=\"#94A3B8\" // Consider var(--slate)\r\n                  fontSize=\"12\" // Consider var(--fz-xxs)\r\n                  style={{ pointerEvents: 'none' }} // Prevent text from blocking hover\r\n                >\r\n                  {node.activation.toFixed(2)}\r\n                </text>\r\n              )}\r\n            </g>\r\n          );\r\n        })}\r\n\r\n      </svg>\r\n\r\n      {/* Layer Labels - Positioned relative to the container div */}\r\n       {layers.map((layer, i) => (\r\n        <div\r\n          key={`label-${i}`}\r\n          style={{\r\n            position: 'absolute',\r\n            bottom: '20px', // Position labels at the bottom\r\n            left: `${(layerGap * (i + 1) / width) * 100}%`, // Position based on percentage\r\n            transform: 'translateX(-50%)', // Center the label\r\n            color: '#94A3B8', // Consider var(--slate)\r\n            fontSize: '14px', // Consider var(--fz-sm)\r\n            textAlign: 'center',\r\n          }}\r\n        >\r\n          {layer.label}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AIVisual;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}